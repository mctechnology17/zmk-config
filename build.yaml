# ========================================
# FileName: build.yaml
# Date: 07.06.2023
# Author: Marcos Chow Castro
# Email: mctechnology170318@gmail.com
# GitHub: https://github.com/mctechnology17
# Brief: configuration file for ZMK firmware
# Board: nice_nano_v2 and puchi_ble_v1
# shield: corne_left nice_view_adapter nice_view,
#         corne_right nice_view_adapter nice_view,
#         corne_left, corne_right and settings_reset
# =========================================
#                              ╔═╦═╦═╗
#                       ╔════╗ ║║║║║╔╝
#                       ║╔╗╔╗║ ║║║║║╚╗
#                       ╚╝║║╚╝ ║╠═╩╩═╝
#                         ║╠═╦═╣╚╦═╦╦═╦╗╔═╦═╦╦╗
#                         ║║╩╣═╣║║║║║╬║╚╣╬║╬║║║
#                         ╚╩═╩═╩╩╩╩═╩═╩═╩═╬╗╠╗║
#                                         ╚═╩═╝
# This file generates the GitHub Actions matrix
# For simple board + shield combinations, add them
# to the top level board and shield arrays, for more
# control, add individual board + shield combinations to
# the `include` property, e.g:
#
# board: [ "nice_nano_v2" ]
# shield: [ "corne_left", "corne_right" ]
# include:
#   - board: bdn9_rev2
#   - board: nice_nano_v2
#     shield: reviung41
#
# Split Keyboard Halves Unable to Pair
#     https://zmk.dev/docs/troubleshooting
#   - board: nice_nano_v2
#     shield: settings_reset
# Reset Split Keyboard Procedure
# Perform the following steps to reset both halves of your split keyboard:
# - Put each half of the split keyboard into bootloader mode.
# - Flash one of the halves of the split with the downloaded settings reset UF2
# image. Immediately after flashing the chosen half, put it into bootloader
# mode to avoid accidental bonding between the halves.
# - Repeat step 2 with the other half of the split keyboard.
# - Flash the actual image for each half of the split keyboard (e.g
# my_board_left.uf2 to the left half, my_board_right.uf2 to the right half).
#
# After completing these steps, pair the halves of the split keyboard
# together by resetting them at the same time. Most commonly, this is done by
# grounding the reset pins for each of your keyboard's microcontrollers or
# pressing the reset buttons at the same time.
#
# cmake-args: -DKEYMAP_FILE=../../config/other-corne.keymap -DCONFIG_ZMK_KEYBOARD_NAME=\"other-corne\" -DEXTRA_CONF_FILE=../../config/other-corne.conf
---
include:

    # nice
  - board: nice_nano_v2
    # required: https://github.com/M165437/nice-view-gem
    # shield: corne_left nice_view_adapter nice_view
    # shield: corne_left nice_view_adapter nice_view_gem
    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Nice_Corne_View\"
    artifact-name: nice_corne_left
    snippet: studio-rpc-usb-uart
    shield: corne_left # for OLED no nice_view
  - board: nice_nano_v2
    # required: https://github.com/M165437/nice-view-gem
    # shield: corne_right nice_view_adapter nice_view
    # shield: corne_right nice_view_adapter nice_view_gem
    cmake-args: -DCONFIG_NICE_VIEW_GEM_ANIMATION=n
    artifact-name: nice_corne_right
    shield: corne_right # for OLED no nice_view

    # puchi
#  - board: puchi_ble_v1
#    shield: corne_left nice_view_adapter nice_view
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Puchi_Corne_View\"
#    artifact-name: puchi_corne_left
#    snippet: studio-rpc-usb-uart
    # shield: corne_left # for OLED no nice_view
#  - board: puchi_ble_v1
#    shield: corne_right nice_view_adapter nice_view
#    artifact-name: puchi_corne_right
    # shield: corne_right # for OLED no nice_view

    # peripheral_left
#  - board: nice_nano_v2
    # required: https://github.com/M165437/nice-view-gem
#    shield: corne_left_peripheral nice_view_adapter nice_view_gem
    # shield: corne_left_peripheral nice_view_adapter nice_view
#    cmake-args: -DCONFIG_NICE_VIEW_GEM_ANIMATION=n
#    artifact-name: nice_corne_left_peripheral
#  - board: puchi_ble_v1
#    shield: corne_left_peripheral nice_view_adapter nice_view
#    artifact-name: puchi_corne_left_peripheral

    # Xiao_Dongle
#  - board: seeeduino_xiao_ble
#    shield: corne_dongle_xiao
    #  -DCONFIG_ZMK_USB=y  -DCONFIG_ZMK_BLE=y
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Xiao_Dongle\" -DCONFIG_ZMK_STUDIO=y
#    artifact-name: xiao_corne_dongle_xiao
#    snippet: studio-rpc-usb-uart
#  - board: seeeduino_xiao_ble
#    shield: corne_dongle_xiao dongle_display
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Xiao_Dongle_O\"
#    artifact-name: xiao_corne_dongle_xiao_dongle_display
#    snippet: studio-rpc-usb-uart
#    # snippet: zmk-usb-logging

    # ProMicro_Dongle
#  - board: nice_nano_v2
#    shield: corne_dongle_pro_micro
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Nice_Dongle\"
#    artifact-name: nice_corne_dongle_pro_micro
#    snippet: studio-rpc-usb-uart
    # snippet: zmk-usb-logging
#  - board: nice_nano_v2
#    shield: corne_dongle_pro_micro dongle_display
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Nice_Dongle_O\"
#    artifact-name: nice_corne_dongle_pro_micro_dongle_display
#    snippet: studio-rpc-usb-uart
    # snippet: zmk-usb-logging
#  - board: puchi_ble_v1
#    shield: corne_dongle_pro_micro
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Puchi_Dongle\"
#    artifact-name: puchi_corne_dongle_pro_micro
#    snippet: studio-rpc-usb-uart
    # snippet: zmk-usb-logging
#  - board: puchi_ble_v1
    # required: https://github.com/M165437/nice-view-gem
    # shield: corne_dongle_pro_micro nice_view_adapter dongle_display_view_pro_micro
#    shield: corne_dongle_pro_micro nice_view_adapter nice_view_gem
    #  -DCONFIG_ZMK_USB=y  -DCONFIG_ZMK_BLE=y
#    cmake-args: -DCONFIG_ZMK_KEYBOARD_NAME=\"Puchi_Dongle_V\"  -DCONFIG_ZMK_STUDIO=y
#    snippet: studio-rpc-usb-uart
#    artifact-name: puchi_corne_dongle_pro_micro_dongle_display_view
    # snippet: zmk-usb-logging

    # settings_reset
#  - board: nice_nano_v2
#    shield: settings_reset
#    artifact-name: nice_settings_reset
#  - board: seeeduino_xiao_ble
#    shield: settings_reset
#    artifact-name: xiao_settings_reset
#  - board: puchi_ble_v1
#    shield: settings_reset
#    artifact-name: puchi_settings_reset
